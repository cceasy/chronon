{
  "metaData": {
    "name": "gcp.item_event_join.canary_streaming_v1__0",
    "team": "gcp",
    "version": "0",
    "outputNamespace": "data",
    "columnHashes": {
      "listing_id_add_cart_sum_1d": "01b6c586165184450e5e41b1f50160bb",
      "listing_id_view_sum_1d": "b572f63fe6ac82b4f8d4489b4ee91fc2",
      "listing_id_purchase_sum_7d": "0d8de7e27c5b99231d71f8ba7f8d1fd6",
      "listing_id_favorite_sum_1d": "47c3bb35fefdc68545b8412381227cec",
      "listing_id": "f2f6c814b8ae1521176b22a1ae7f2d0d",
      "user_id": "493d3df28f80664abd11b19fcd33b6e6",
      "ts": "ad9fd4c611e20ad833819a4ce9d752bf"
    },
    "online": 1,
    "production": 0,
    "sourceFile": "joins/gcp/item_event_join.py",
    "customJson": "{\"airflowDependencies\": [{\"name\": \"wf_data_item_events_parquet_compat_with_offset_0\", \"spec\": \"data.item_events_parquet_compat/ds={{ macros.ds_add(ds, 0) }}\"}, {\"name\": \"wf_data_item_events_parquet_compat_with_offset_0\", \"spec\": \"data.item_events_parquet_compat/ds={{ macros.ds_add(ds, 0) }}\"}], \"label_join\": false}",
    "samplePercent": 100.0,
    "executionInfo": {
      "env": {
        "common": {
          "VERSION": "latest",
          "JOB_MODE": "local[*]",
          "HADOOP_DIR": "[STREAMING-TODO]/path/to/folder/containing",
          "CHRONON_ONLINE_CLASS": "[ONLINE-TODO]your.online.class",
          "CHRONON_ONLINE_ARGS": " -Ztasks=4",
          "PARTITION_COLUMN": "ds",
          "PARTITION_FORMAT": "yyyy-MM-dd",
          "CUSTOMER_ID": "dev",
          "GCP_PROJECT_ID": "canary-443022",
          "GCP_REGION": "us-central1",
          "GCP_DATAPROC_CLUSTER_NAME": "zipline-canary-cluster",
          "GCP_BIGTABLE_INSTANCE_ID": "zipline-canary-instance",
          "FLINK_STATE_URI": "gs://zipline-warehouse-canary/flink-state",
          "CLOUD_PROVIDER": "gcp",
          "ENABLE_PUBSUB": "true",
          "ARTIFACT_PREFIX": "gs://zipline-artifacts-dev"
        },
        "modeEnvironments": {
          "upload": {
            "VERSION": "latest",
            "JOB_MODE": "local[*]",
            "HADOOP_DIR": "[STREAMING-TODO]/path/to/folder/containing",
            "CHRONON_ONLINE_CLASS": "[ONLINE-TODO]your.online.class",
            "CHRONON_ONLINE_ARGS": " -Ztasks=4",
            "PARTITION_COLUMN": "ds",
            "PARTITION_FORMAT": "yyyy-MM-dd",
            "CUSTOMER_ID": "dev",
            "GCP_PROJECT_ID": "canary-443022",
            "GCP_REGION": "us-central1",
            "GCP_DATAPROC_CLUSTER_NAME": "zipline-transient-upload-cluster",
            "GCP_BIGTABLE_INSTANCE_ID": "zipline-canary-instance",
            "FLINK_STATE_URI": "gs://zipline-warehouse-canary/flink-state",
            "CLOUD_PROVIDER": "gcp",
            "ENABLE_PUBSUB": "true",
            "ARTIFACT_PREFIX": "gs://zipline-artifacts-dev"
          }
        }
      },
      "conf": {
        "common": {
          "spark.chronon.partition.column": "ds",
          "spark.chronon.cloud_provider": "gcp",
          "spark.chronon.table.format_provider.class": "ai.chronon.integrations.cloud_gcp.GcpFormatProvider",
          "spark.chronon.partition.format": "yyyy-MM-dd",
          "spark.chronon.table.gcs.temporary_gcs_bucket": "zipline-warehouse-canary",
          "spark.chronon.table.gcs.connector_output_dataset": "data",
          "spark.chronon.table.gcs.connector_output_project": "canary-443022",
          "spark.chronon.table_write.prefix": "gs://zipline-warehouse-canary/data/tables/",
          "spark.chronon.table_write.format": "iceberg",
          "spark.sql.catalog.spark_catalog.warehouse": "gs://zipline-warehouse-canary/data/tables/",
          "spark.sql.catalog.spark_catalog.gcp_location": "us-central1",
          "spark.sql.catalog.spark_catalog.gcp_project": "canary-443022",
          "spark.sql.catalog.spark_catalog.catalog-impl": "org.apache.iceberg.gcp.bigquery.BigQueryMetastoreCatalog",
          "spark.sql.catalog.spark_catalog": "ai.chronon.integrations.cloud_gcp.DelegatingBigQueryMetastoreCatalog",
          "spark.sql.catalog.spark_catalog.io-impl": "org.apache.iceberg.io.ResolvingFileIO",
          "spark.sql.catalog.default_iceberg.warehouse": "gs://zipline-warehouse-canary/data/tables/",
          "spark.sql.catalog.default_iceberg.gcp_location": "us-central1",
          "spark.sql.catalog.default_iceberg.gcp_project": "canary-443022",
          "spark.sql.catalog.default_iceberg.catalog-impl": "org.apache.iceberg.gcp.bigquery.BigQueryMetastoreCatalog",
          "spark.sql.catalog.default_iceberg": "ai.chronon.integrations.cloud_gcp.DelegatingBigQueryMetastoreCatalog",
          "spark.sql.catalog.default_iceberg.io-impl": "org.apache.iceberg.io.ResolvingFileIO",
          "spark.sql.defaultUrlStreamHandlerFactory.enabled": "false",
          "spark.kryo.registrator": "ai.chronon.integrations.cloud_gcp.ChrononIcebergKryoRegistrator",
          "spark.chronon.coalesce.factor": "10",
          "spark.default.parallelism": "10",
          "spark.sql.shuffle.partitions": "10"
        },
        "modeConfigs": {
          "backfill": {
            "spark.chronon.partition.column": "ds",
            "spark.chronon.cloud_provider": "gcp",
            "spark.chronon.table.format_provider.class": "ai.chronon.integrations.cloud_gcp.GcpFormatProvider",
            "spark.chronon.partition.format": "yyyy-MM-dd",
            "spark.chronon.table.gcs.temporary_gcs_bucket": "zipline-warehouse-canary",
            "spark.chronon.table.gcs.connector_output_dataset": "data",
            "spark.chronon.table.gcs.connector_output_project": "canary-443022",
            "spark.chronon.table_write.prefix": "gs://zipline-warehouse-canary/data/tables/",
            "spark.chronon.table_write.format": "iceberg",
            "spark.sql.catalog.spark_catalog.warehouse": "gs://zipline-warehouse-canary/data/tables/",
            "spark.sql.catalog.spark_catalog.gcp_location": "us-central1",
            "spark.sql.catalog.spark_catalog.gcp_project": "canary-443022",
            "spark.sql.catalog.spark_catalog.catalog-impl": "org.apache.iceberg.gcp.bigquery.BigQueryMetastoreCatalog",
            "spark.sql.catalog.spark_catalog": "ai.chronon.integrations.cloud_gcp.DelegatingBigQueryMetastoreCatalog",
            "spark.sql.catalog.spark_catalog.io-impl": "org.apache.iceberg.io.ResolvingFileIO",
            "spark.sql.catalog.default_iceberg.warehouse": "gs://zipline-warehouse-canary/data/tables/",
            "spark.sql.catalog.default_iceberg.gcp_location": "us-central1",
            "spark.sql.catalog.default_iceberg.gcp_project": "canary-443022",
            "spark.sql.catalog.default_iceberg.catalog-impl": "org.apache.iceberg.gcp.bigquery.BigQueryMetastoreCatalog",
            "spark.sql.catalog.default_iceberg": "ai.chronon.integrations.cloud_gcp.DelegatingBigQueryMetastoreCatalog",
            "spark.sql.catalog.default_iceberg.io-impl": "org.apache.iceberg.io.ResolvingFileIO",
            "spark.sql.defaultUrlStreamHandlerFactory.enabled": "false",
            "spark.kryo.registrator": "ai.chronon.integrations.cloud_gcp.ChrononIcebergKryoRegistrator",
            "spark.chronon.coalesce.factor": "10",
            "spark.default.parallelism": "10",
            "spark.sql.shuffle.partitions": "10",
            "spark.chronon.backfill_cloud_provider": "gcp"
          }
        }
      },
      "clusterConf": {
        "common": {},
        "modeClusterConfigs": {
          "upload": {
            "dataproc.config": "{\"gceClusterConfig\": {\"subnetworkUri\": \"default\", \"serviceAccount\": \"dataproc@canary-443022.iam.gserviceaccount.com\", \"serviceAccountScopes\": [\"https://www.googleapis.com/auth/cloud-platform\", \"https://www.googleapis.com/auth/cloud.useraccounts.readonly\", \"https://www.googleapis.com/auth/devstorage.read_write\", \"https://www.googleapis.com/auth/logging.write\"], \"metadata\": {\"hive-version\": \"3.1.2\", \"SPARK_BQ_CONNECTOR_URL\": \"gs://spark-lib/bigquery/spark-3.5-bigquery-0.42.1.jar\", \"artifact_prefix\": \"gs://zipline-artifacts-canary\"}, \"tags\": []}, \"masterConfig\": {\"numInstances\": 1, \"machineTypeUri\": \"n2-highmem-8\", \"diskConfig\": {\"bootDiskType\": \"pd-standard\", \"bootDiskSizeGb\": 1024}}, \"workerConfig\": {\"numInstances\": 2, \"machineTypeUri\": \"n2-highmem-4\", \"diskConfig\": {\"bootDiskType\": \"pd-standard\", \"bootDiskSizeGb\": 64, \"numLocalSsds\": 2}}, \"softwareConfig\": {\"imageVersion\": \"2.2.50-debian12\", \"optionalComponents\": [\"FLINK\", \"JUPYTER\"], \"properties\": {}}, \"initializationActions\": [{\"executable_file\": \"gs://zipline-artifacts-canary/scripts/copy_java_security.sh\"}], \"endpointConfig\": {\"enableHttpPortAccess\": true}, \"lifecycleConfig\": {\"idleDeleteTtl\": \"7200s\"}}"
          }
        }
      },
      "scheduleCron": "@daily"
    }
  },
  "left": {
    "events": {
      "table": "data.item_events_parquet_compat",
      "query": {
        "selects": {
          "listing_id": "EXPLODE(TRANSFORM(SPLIT(COALESCE(attributes['sold_listing_ids'], attributes['listing_id']), ','), e -> CAST(e AS LONG)))",
          "user_id": "attributes['user_id']",
          "ts": "timestamp"
        },
        "timeColumn": "timestamp"
      }
    }
  },
  "joinParts": [
    {
      "groupBy": {
        "metaData": {
          "name": "gcp.item_event_canary.actions_pubsub_v2__0",
          "team": "gcp",
          "version": "0",
          "outputNamespace": "data",
          "columnHashes": {
            "add_cart_sum_1d": "bb100dd59a6482a3dc49e9c45b6c769b",
            "view_sum_1d": "74f9df51d8e3a6347e54f03e7de11444",
            "purchase_sum_7d": "add3089ada1674ae92b69edca264ac70",
            "favorite_sum_1d": "0f37825000b694dce52744683d2c62a9",
            "listing_id": "ae27be6774c908e7081a3e2cd695e619"
          },
          "online": 1,
          "executionInfo": {
            "env": {
              "common": {
                "CHRONON_ONLINE_ARGS": "-Ztasks=4 -Zbootstrap=bootstrap.zipline-kafka-cluster.us-central1.managedkafka.canary-443022.cloud.goog:9092"
              },
              "modeEnvironments": {}
            },
            "conf": {
              "common": {
                "spark.chronon.partition.column": "_DATE"
              },
              "modeConfigs": {}
            },
            "scheduleCron": "@daily",
            "historicalBackfill": 0
          }
        },
        "sources": [
          {
            "events": {
              "table": "data.item_events_parquet_compat",
              "topic": "pubsub://test-item-event-data/serde=pubsub_schema/project=canary-443022/schemaId=item-event/tasks=4/subscription=test-item-event-data-sub",
              "query": {
                "selects": {
                  "listing_id": "EXPLODE(TRANSFORM(SPLIT(COALESCE(attributes['sold_listing_ids'], attributes['listing_id']), ','), e -> CAST(e AS LONG)))",
                  "add_cart": "IF(event_type = 'backend_add_to_cart', 1, 0)",
                  "view": "IF(event_type = 'view_listing', 1, 0)",
                  "purchase": "IF(event_type = 'backend_cart_payment', 1, 0)",
                  "favorite": "IF(event_type = 'backend_favorite_item2', 1, 0)"
                },
                "wheres": [
                  "event_type in ('backend_add_to_cart', 'view_listing', 'backend_cart_payment', 'backend_favorite_item2')"
                ],
                "timeColumn": "timestamp"
              }
            }
          }
        ],
        "keyColumns": [
          "listing_id"
        ],
        "aggregations": [
          {
            "inputColumn": "add_cart",
            "operation": 7,
            "argMap": {},
            "windows": [
              {
                "length": 1,
                "timeUnit": 1
              }
            ]
          },
          {
            "inputColumn": "view",
            "operation": 7,
            "argMap": {},
            "windows": [
              {
                "length": 1,
                "timeUnit": 1
              }
            ]
          },
          {
            "inputColumn": "purchase",
            "operation": 7,
            "argMap": {},
            "windows": [
              {
                "length": 7,
                "timeUnit": 1
              }
            ]
          },
          {
            "inputColumn": "favorite",
            "operation": 7,
            "argMap": {},
            "windows": [
              {
                "length": 1,
                "timeUnit": 1
              }
            ]
          }
        ]
      },
      "useLongNames": 0
    }
  ],
  "rowIds": [
    "user_id"
  ],
  "useLongNames": 0
}